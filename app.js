/*
  This is the entry point for the Mongopop Express app; it's invoked
  from `Mongopop/bin/www`
*/
var mongoose   = require('mongoose');
mongoose.connect('mongodb://admin:admin@ds139122.mlab.com:39122/restaurant-reviewer-app');
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var bodyParser = require('body-parser');
var app = express();

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

// Makes the generated html easier to read
app.locals.pretty = true;

// View engine setup. Jade has now been renamed Pug. The view engine generates
// the actual html our Jade/Pug templates. Only the error page is actually
// rendered on the server (Express) side; the rest is generated by the client
// application (e.g. Angular or React).
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

// Indicate the middleware that Express should use
app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));

// The `public` folder will contain the files that need to be accessed
// by the client app (e.g. Angular .js files).
app.use(express.static(path.join(__dirname, 'public')));


var port = process.env.PORT || 8081;        // set our port

// ROUTES FOR OUR API
// =============================================================================
var router = express.Router();              // get an instance of the express Router

// more routes for our API will happen here
// REGISTER OUR ROUTES -------------------------------
// all of our routes will be prefixed with /api
app.use('/api', app.router);
require('./src/routes/')(app);
// For any other routes, set the status to 404 and forward to error handler
/*app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});*/

// START THE SERVER
// =============================================================================
app.listen(port);
console.log('Magic happens on port ' + port);

module.exports = app;
